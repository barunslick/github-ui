{"version":3,"sources":["components/avatar/Avatar.jsx","services/githubApi.js","components/socials/Socials.jsx","actions/profileActions.js","constants/route.js","components/contacts/Contacts.jsx","components/profile/Profile.jsx","components/following/followingListItem/FollowingListItem.jsx","components/following/Following.jsx","components/followers/followerListItem/FollowerListItem.jsx","components/followers/Followers.jsx","components/repositoires/respositoryListItem/RepositoryListItem.jsx","components/repositoires/Repositores.jsx","actions/repoActions.js","components/main/Main.jsx","constants/apiUrl.js","App.js","reducers/profileActionReducers.js","reducers/reposActionReducers.js","reducers/index.js","store.js","index.js"],"names":["Avatar","props","className","src","alt","fetchContent","url","a","fetch","then","response","json","data","catch","error","result","connect","state","followersUrl","mainData","followers_url","followingUrl","following_url","followersCount","Object","keys","followers","length","followingCount","following","dispatch","setFollowing","fetchedData","type","payload","setFollowers","useEffect","fetchFollowers","fetchFollowings","actuatlFollowingUrl","split","to","blogLink","blog","address","location","href","name","gitId","login","html_url","imageUrl","avatar_url","FollowingListItem","titel","map","key","id","FollowerListItem","follower","RepositoryListItem","item","title","description","language","moment","updated_at","fromNow","reposUrl","repos_url","reposData","repos","setRepos","useState","isLoading","setIsLoding","fetchRepos","setMainData","setLoading","fetchData","path","exact","component","Repositores","Followers","Following","App","INITIAL_STATE","profileActionReducer","action","reposActionReducer","reducer","combineReducers","profileActionReducers","reposActionReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05aff3a1.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\n/**\n * Returns the avatar of the user.\n *\n * @param {props} props\n * @returns {JSX} Image JSX of the user.\n */\nfunction Avatar(props) {\n  return (\n    <img className = { props.className } src = { props.src } alt = { props.alt }></img>\n  );\n}\n\nAvatar.propTypes = {\n  className: PropTypes.string,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default Avatar;\n","/**\n * Gets a url and fetches content.\n * \n * @param {String} url An api endoint.\n * @returns {JSON} Json data if no error is found.\n */\nexport default async function fetchContent(url) {\n  \n  const result = await fetch(url)\n    .then(response => response.json())\n    .then(data => data)\n    .catch(error => {\n      throw (error);\n    });\n\n  return result;\n\n}\n","import React, { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\nimport * as routeUrls from '../../constants/route';\nimport fetchContent from '../../services/githubApi';\nimport * as profileActions from '../../actions/profileActions';\n\nimport './socials.scss';\n\n/**\n * Shows the number of followers and following.\n * \n * @param {Object} props\n * @returns\n */\nfunction Socials(props) {\n\n  const { followersUrl, followingUrl, followersCount, followingCount, setFollowing, setFollowers } = props;\n\n  useEffect(() => {\n\n    const fetchFollowers = async () => {\n      const followers = await fetchContent(followersUrl);\n\n      if (followers) {\n        setFollowers(followers);\n      }\n    };\n\n    const fetchFollowings = async (actuatlFollowingUrl) => {\n      const following = await fetchContent(actuatlFollowingUrl);\n\n      if (following) {\n        setFollowing(following);\n      }\n    };\n\n    if (followersUrl) {\n      fetchFollowers();\n    }\n    if (followingUrl) {\n      const actuatlFollowingUrl = followingUrl.split('{')[0];\n\n      fetchFollowings(actuatlFollowingUrl);\n    }\n\n    // eslint-disable-next-line\n  }, [followersUrl, followingUrl]);\n\n\n\n  return (\n    <div className=\"Socials\">\n      <div className=\"Socials__followers\">\n        <p>\n          <Link to={routeUrls.FOLLOWERS}>\n            <span className=\"spray\">{followersCount}</span> Followers\n          </Link>\n        </p>\n      </div >\n      <div className=\"Socials__following\">\n        <p>\n          <Link to={routeUrls.FOLLOWING}>\n            <span className=\"spray\">{followingCount}</span> Following\n          </Link>\n        </p>\n      </div>\n    </div >\n  );\n}\n\n/**\n * Sends required data from state to props of component.\n *\n * @param {Object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    followersUrl: state.mainData.data.followers_url,\n    followingUrl: state.mainData.data.following_url,\n    followersCount: Object.keys(state.mainData.followers).length,\n    followingCount: Object.keys(state.mainData.following).length,\n  };\n}\n\n/**\n * Take store.dispatch and map it as props to our component.\n *\n * @param {*} dispatch\n */\nfunction mapDisptachToProps(dispatch) {\n  return {\n    setFollowing: fetchedData => dispatch(profileActions.setFollowing(fetchedData)),\n    setFollowers: fetchedData => dispatch(profileActions.setFollowers(fetchedData)),\n  };\n}\n\nSocials.propTypes = {\n  followersUrl: PropTypes.string,\n  followingUrl: PropTypes.string,\n  followersCount: PropTypes.number,\n  followingCount: PropTypes.number,\n  setFollowing: PropTypes.func,\n  setFollowers: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDisptachToProps)(Socials);\n","export const SET_DATA = 'SET_DATA';\nexport const SET_FOLLOWING = 'SET_FOLLOWING';\nexport const SET_FOLLOWERS = 'SET_FOLLOWERS';\n\nexport const setData = jsonData => ({\n  type: SET_DATA,\n  payload: jsonData\n});\n\nexport const setFollowing = jsonData => ({\n  type: SET_FOLLOWING,\n  payload: jsonData\n});\n\nexport const setFollowers = jsonData => ({\n  type: SET_FOLLOWERS,\n  payload: jsonData\n});\n\n","export const BASE = '/';\nexport const FOLLOWERS = '/followers';\nexport const FOLLOWING = '/following';\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './contacts.scss';\n\n/**\n * Shows the contact details of the user.\n * \n * @param {Object} props\n * @returns\n */\nfunction Contacts(props) {\n\n  const { blogLink, address } = props;\n\n  return (\n    <div className=\"Contacts\">\n      <div><i className=\"fas fa-link icons\"></i><span className=\"Contacts__text-content\"><a href={`http://${blogLink}`}>{blogLink}</a></span></div>\n      <div><i className=\"fas fa-map-marker-alt icons\"></i><span className=\"Contacts__text-content\">{address}</span></div>\n    </div>\n  );\n}\n\n/**\n * Sends required data from state to props of component.\n *\n * @param {Object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    blogLink: state.mainData.data.blog,\n    address: state.mainData.data.location,\n  };\n}\n\nContacts.propTypes = {\n  blogLink: PropTypes.string,\n  address: PropTypes.string\n};\n\nexport default connect(mapStateToProps)(Contacts);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../avatar/Avatar';\nimport Socials from '../socials/Socials';\nimport Contacts from '../contacts/Contacts';\nimport * as routeUrls from '../../constants/route';\n\nimport './profile.scss';\n\n/**\n * Shows the user avatar along with details such as name, followers, and other details.\n * \n * @param {Object} props\n * @returns\n */\nfunction Profile(props) {\n\n  const { name, gitId, url, imageUrl } = props;\n\n  return (\n    <div className=\"Profile\">\n      <span className=\"Profile__heading\"> {`// Profile --------------------------------------------------------------------------------------------------------------`}</span>\n      <div className=\"Profile__avatar-container\">\n        <Avatar className=\"Profile__avatar\" src = {imageUrl} alt={name}/>\n      </div>\n      <div className=\"Profile__user-details\">\n        <Link to={routeUrls.BASE}>\n          <h1 className=\"Profile__user-name\">{name}</h1>\n        </Link>\n        <p className=\"Profile__user-id\"> <a href = {url}>{gitId}</a> </p>\n      </div>\n      <Socials />\n      <Contacts />\n    </div>\n  );\n}\n\n/**\n * Sends required data from state to props of component.\n *\n * @param {Object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    name: state.mainData.data.name,\n    gitId: state.mainData.data.login,\n    url: state.mainData.data.html_url,\n    imageUrl: state.mainData.data.avatar_url,\n  };\n}\n\nProfile.propTypes = {\n  name: PropTypes.string,\n  gitId: PropTypes.string,\n  url: PropTypes.string,\n  imageUrl: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(Profile);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Avatar from '../../avatar/Avatar';\n\nimport './followingListItem.scss';\n\n/**\n * Shows the details of the follower.\n * \n * @param {Object} props\n * @returns {JSX} Contains the jsx to show user respositories.\n */\nfunction FollowingListItem(props) {\n\n  const { following } = props;\n\n  return (\n    <div className=\"FollowingListItem\">\n      <div className=\"FollowingListItem__avatar-holder\">\n        <Avatar className=\"FollowerListItem__avatar\" src={following.avatar_url} alt={following.login} />\n      </div>\n      <div className=\"FollowingListItem__user-details\">\n        <p className=\"FollowingListItem__user-id\"><a href={following.html_url} titel={following.login}>{following.login}</a></p>\n      </div>\n    </div>\n  );\n}\n\nFollowingListItem.propTypes = {\n  following: PropTypes.object,\n};\n\nexport default FollowingListItem;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport FollowingListItem from './followingListItem/FollowingListItem';\n\nimport './following.scss';\n\n/**\n * Shows the following acoount by the user account.\n *\n * @param {Object} props\n * @returns\n */\nfunction Following(props) {\n\n  const { following } = props;\n\n  return (\n    <div className=\"Following\">\n      <span className=\"Following__heading\"> {`// Following --------------------------------------------------------------------------------------------------------------`}</span>\n      <div className=\"Following__list-container\">\n        {following && following.map(following => <FollowingListItem key={following.id} following={following} />)}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Sends required data from state to props of component.\n *\n * @param {Object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    following: state.mainData.following\n  };\n}\n\nFollowing.propTypes = {\n  following: PropTypes.array,\n};\n\nexport default connect(mapStateToProps)(Following);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Avatar from '../../avatar/Avatar';\n\nimport './followerListItem.scss';\n\n/**\n * Shows the details of the follower.\n * \n * @param {Object} props\n * @returns {JSX} Contains the jsx to show user respositories.\n */\nfunction FollowerListItem(props) {\n\n  const { follower } = props;\n\n  return (\n    <div className=\"FollowerListItem\">\n      <div className=\"FollowerListItem__avatar-holder\">\n        <Avatar className=\"FollowerListItem__avatar\" src={follower.avatar_url} alt={follower.login} />\n      </div>\n      <div className=\"FollowerListItem__user-details\">\n        <p className=\"FollowerListItem__user-id\"><a href={follower.html_url} titel={follower.login}>{follower.login}</a></p>\n      </div>\n    </div>\n  );\n}\n\nFollowerListItem.propTypes = {\n  follower: PropTypes.object,\n};\n\nexport default FollowerListItem;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport FollowerListItem from './followerListItem/FollowerListItem';\n\nimport './followers.scss';\n\n/**\n * Shows the followers of the user account.\n *\n * @param {Object} props\n * @returns\n */\nfunction Followers(props) {\n\n  const { followers } = props;\n\n  return (\n    <div className=\"Followers\">\n      <span className=\"Followers__heading\"> {`// Followers --------------------------------------------------------------------------------------------------------------`}</span>\n      <div className=\"Followers__list-container\">\n        {followers && followers.map(follower => <FollowerListItem key={follower.id} follower={follower}/> )}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Sends required data from state to props of component.\n *\n * @param {Object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    followers: state.mainData.followers\n  };\n}\n\nFollowers.propTypes = {\n  followers: PropTypes.array,\n};\n\nexport default connect(mapStateToProps)(Followers);\n","import React from 'react';\n\nimport moment from 'moment';\nimport { PropTypes } from 'prop-types';\n\nimport './repositoryListItem.scss';\n\n/**\n * Displays the details of repository.\n *\n * @param {Object} props\n * @returns\n */\nfunction RepositoryListItem(props) {\n  return (\n    <div className=\"Repository-list\">\n      <div className=\"Repository-list__title\">\n        <a href={props.item.html_url} title={props.item.name}>{props.item.name}</a>\n      </div>\n      {props.item.description &&\n        <div className=\"Repository-list__description\">\n          {props.item.description}\n        </div>\n      }\n      <div className=\"Repository-list__details\">\n        {props.item.language &&\n          <div className=\"Repository-list__language\">\n            [{props.item.language}]\n          </div>\n        }\n        <div className=\"Repository-list__update-time\">\n          [Updated: {moment(props.item.updated_at).fromNow()}]\n        </div>\n      </div>\n    </div>\n  );\n}\n\nRepositoryListItem.propTypes = {\n  item: PropTypes.object,\n};\n\nexport default RepositoryListItem;\n","import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport fetchContent from '../../services/githubApi';\nimport * as reposActions from '../../actions/repoActions';\nimport RepositoryListItem from './respositoryListItem/RepositoryListItem';\n\nimport './repositories.scss';\n\n/**\n * Shows the repositores of the user.\n * \n * @param {Object} props\n * @returns {JSX} Contains the jsx to show user respositories.\n */\nfunction Repositores(props) {\n\n  const [isLoading, setIsLoding] = useState(true);\n\n  const { reposUrl, setRepos, reposData } = props;\n\n  useEffect(() => {\n\n    const fetchRepos = async () => {\n      const result = await fetchContent(reposUrl);\n\n      if (result) {\n        setRepos(result);\n        setIsLoding(false);\n      }\n\n    };\n\n    if (reposUrl) {\n      fetchRepos();\n    }\n\n    // eslint-disable-next-line\n  }, [reposUrl]);\n\n\n  return (\n    <div className=\"Repositories\">\n      <span className=\"Repositories__heading\"> {`// Repositories ---------------------------------------------------------------------------------------------------------------------------------`}</span>\n      {isLoading ?\n        <p className=\"Repositories__loading\">Loading....</p>\n        :\n        <div className = \"Repositories__list-container\">\n          { reposData.map( item=> <RepositoryListItem key={item.id} item={item}/>) }\n        </div>\n      }\n    </div>\n  );\n}\n\n/**\n * Sends required data from state to props of component.\n *\n * @param {Object} state\n * @returns\n */\nfunction mapStateToProps(state) {\n  return {\n    reposUrl: state.mainData.data.repos_url,\n    reposData: state.repos.reposData,\n  };\n}\n\n/**\n * Take store.dispatch and map it as props to our component.\n *\n * @param {*} dispatch\n */\nfunction mapDisptachToProps(dispatch) {\n  return {\n    setRepos: fetchedData => dispatch(reposActions.setRepos(fetchedData)),\n  };\n}\n\nRepositores.propTypes = {\n  reposUrl: PropTypes.string,\n  setRepos: PropTypes.func,\n  reposData: PropTypes.array,\n};\n\nexport default connect(mapStateToProps, mapDisptachToProps)(Repositores);\n","export const SET_REPOS = 'SET_REPOS';\n\nexport const setRepos = jsonData => ({\n  type: SET_REPOS,\n  payload: jsonData\n});\n","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Profile from '../profile/Profile';\nimport Following from '../following/Following';\nimport Followers from '../followers/Followers';\nimport { BASE_URL } from '../../constants/apiUrl';\nimport fetchContent from '../../services/githubApi';\nimport * as routeUrls from '../../constants/route';\nimport Repositores from '../repositoires/Repositores';\nimport * as profileActions from '../../actions/profileActions';\n\nimport '../../style/style.scss';\nimport '../../style/reset.scss';\n\n/**\n * Main App wrapper.\n * \n * @param {Object} props\n * @returns {JSX} \n */\nfunction Main(props) {\n\n  const [isLoading, setLoading] = useState(true);\n\n  const { setMainData } = props;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetchContent(BASE_URL);\n\n      if (result) {\n        setMainData(result);\n        setLoading(false);\n      }\n\n    };\n\n    fetchData();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"MainWrapper\">\n        <div className=\"Content\">\n          {isLoading ?\n            <p>Loading.....</p>\n            :\n            <>\n              <Profile />\n              <Switch>\n                <Route path={routeUrls.BASE} exact component={Repositores} />\n                <Route path={routeUrls.FOLLOWERS} exact component={Followers} />\n                <Route path={routeUrls.FOLLOWING} exact component={Following} />\n              </Switch>\n            </>\n          }\n        </div>\n      </div>\n    </Router>\n  );\n}\n\n/**\n * Take store.dispatch and map it as props to our component.\n *\n * @param {*} dispatch\n */\nfunction mapDisptachToProps(dispatch) {\n  return {\n    setMainData: fetchedData => dispatch(profileActions.setData(fetchedData)),\n  };\n}\n\nMain.propTypes = {\n  setMainData: PropTypes.func,\n};\n\nexport default connect(null, mapDisptachToProps)(Main);\n","export const BASE_URL = 'https://api.github.com/users/barunslick';\n","import React from 'react';\n\nimport Main from './components/main/Main';\n\n/**\n * Main App wrapper.\n * \n * @returns {JSX} \n */\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import * as profileActions from '../actions/profileActions';\n\nconst INITIAL_STATE = {\n  data: {},\n  followers: [],\n  following: []\n};\n\n/**\n * Performs action based on given payload ,i.e fetched data from an api and returns new state.\n *\n * @param {Object} state Current State.\n * @param {String} action Takes the action that has been dispatched.\n * @returns\n */\nfunction profileActionReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case profileActions.SET_DATA:\n      return {\n        ...state,\n        data: action.payload\n      };\n\n    case profileActions.SET_FOLLOWING:\n      return {\n        ...state,\n        following: action.payload\n      };\n\n    case profileActions.SET_FOLLOWERS:\n      return {\n        ...state,\n        followers: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default profileActionReducer;\n","import * as repoActions from '../actions/repoActions';\n\nconst INITIAL_STATE = {\n  reposData: [],\n};\n\n/**\n * Performs action based on given payload ,i.e fetched data from an api and returns new state.\n *\n * @param {Object} state Current State.\n * @param {String} action Takes the action that has been dispatched.\n * @returns\n */\nfunction reposActionReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case repoActions.SET_REPOS:\n      return {\n        ...state,\n        reposData: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reposActionReducer;\n","import { combineReducers } from 'redux';\n\nimport profileActionReducers from './profileActionReducers';\nimport reposActionReducers from './reposActionReducers.js';\n\nconst reducer = combineReducers({\n  mainData: profileActionReducers,\n  repos: reposActionReducers,\n});\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n/* const INITIAL_VALUE = []; */\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()); \n\nexport default store;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= {store} >\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}